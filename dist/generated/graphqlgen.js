"use strict";
// Code generated by github.com/prisma/graphqlgen, DO NOT EDIT.
exports.__esModule = true;
var QueryResolvers;
(function (QueryResolvers) {
    QueryResolvers.defaultResolvers = {};
})(QueryResolvers = exports.QueryResolvers || (exports.QueryResolvers = {}));
var MutationResolvers;
(function (MutationResolvers) {
    MutationResolvers.defaultResolvers = {};
})(MutationResolvers = exports.MutationResolvers || (exports.MutationResolvers = {}));
var AuthPayloadResolvers;
(function (AuthPayloadResolvers) {
    AuthPayloadResolvers.defaultResolvers = {
        token: function (parent) { return parent.token; },
        user: function (parent) { return parent.user; }
    };
})(AuthPayloadResolvers = exports.AuthPayloadResolvers || (exports.AuthPayloadResolvers = {}));
var UserResolvers;
(function (UserResolvers) {
    UserResolvers.defaultResolvers = {
        id: function (parent) { return parent.id; },
        email: function (parent) { return parent.email; },
        createdAt: function (parent) { return parent.createdAt; }
    };
})(UserResolvers = exports.UserResolvers || (exports.UserResolvers = {}));
var GoogleFitAccountResolvers;
(function (GoogleFitAccountResolvers) {
    GoogleFitAccountResolvers.defaultResolvers = {
        id: function (parent) { return parent.id; },
        userId: function (parent) { return parent.userId; },
        refreshToken: function (parent) { return parent.refreshToken; },
        accessToken: function (parent) { return parent.accessToken; },
        expiration: function (parent) { return parent.expiration; }
    };
})(GoogleFitAccountResolvers = exports.GoogleFitAccountResolvers || (exports.GoogleFitAccountResolvers = {}));
var FitbitAccountResolvers;
(function (FitbitAccountResolvers) {
    FitbitAccountResolvers.defaultResolvers = {
        id: function (parent) { return parent.id; },
        userId: function (parent) { return parent.userId; },
        fitbitUserId: function (parent) { return parent.fitbitUserId; },
        refreshToken: function (parent) { return parent.refreshToken; },
        accessToken: function (parent) { return parent.accessToken; },
        expiration: function (parent) { return parent.expiration; }
    };
})(FitbitAccountResolvers = exports.FitbitAccountResolvers || (exports.FitbitAccountResolvers = {}));
var SleepLogResolvers;
(function (SleepLogResolvers) {
    SleepLogResolvers.defaultResolvers = {
        id: function (parent) { return parent.id; },
        userId: function (parent) { return parent.userId; },
        dateOfSleep: function (parent) { return parent.dateOfSleep; },
        duration: function (parent) { return parent.duration; },
        efficiency: function (parent) { return parent.efficiency; },
        isMainSleep: function (parent) { return parent.isMainSleep; },
        logId: function (parent) { return parent.logId; },
        minutesAfterWakeup: function (parent) { return parent.minutesAfterWakeup; },
        minutesAsleep: function (parent) { return parent.minutesAsleep; },
        minutesAwake: function (parent) { return parent.minutesAwake; },
        minutesToFallAsleep: function (parent) { return parent.minutesToFallAsleep; },
        startTime: function (parent) { return parent.startTime; },
        timeInBed: function (parent) { return parent.timeInBed; },
        type: function (parent) {
            return parent.type === undefined ? null : parent.type;
        },
        summaryDeepCount: function (parent) {
            return parent.summaryDeepCount === undefined ? null : parent.summaryDeepCount;
        },
        summaryDeepMinutes: function (parent) {
            return parent.summaryDeepMinutes === undefined
                ? null
                : parent.summaryDeepMinutes;
        },
        summaryDeepThirtyDayAvgMinutes: function (parent) {
            return parent.summaryDeepThirtyDayAvgMinutes === undefined
                ? null
                : parent.summaryDeepThirtyDayAvgMinutes;
        },
        summaryLightCount: function (parent) {
            return parent.summaryLightCount === undefined ? null : parent.summaryLightCount;
        },
        summaryLightMinutes: function (parent) {
            return parent.summaryLightMinutes === undefined
                ? null
                : parent.summaryLightMinutes;
        },
        summaryLightThirtyDayAvgMinutes: function (parent) {
            return parent.summaryLightThirtyDayAvgMinutes === undefined
                ? null
                : parent.summaryLightThirtyDayAvgMinutes;
        },
        summaryRemCount: function (parent) {
            return parent.summaryRemCount === undefined ? null : parent.summaryRemCount;
        },
        summaryRemMinutes: function (parent) {
            return parent.summaryRemMinutes === undefined ? null : parent.summaryRemMinutes;
        },
        summaryRemThirtyDayAvgMinutes: function (parent) {
            return parent.summaryRemThirtyDayAvgMinutes === undefined
                ? null
                : parent.summaryRemThirtyDayAvgMinutes;
        },
        summaryWakeCount: function (parent) {
            return parent.summaryWakeCount === undefined ? null : parent.summaryWakeCount;
        },
        summaryWakeMinutes: function (parent) {
            return parent.summaryWakeMinutes === undefined
                ? null
                : parent.summaryWakeMinutes;
        },
        summaryWakeThirtyDayAvgMinutes: function (parent) {
            return parent.summaryWakeThirtyDayAvgMinutes === undefined
                ? null
                : parent.summaryWakeThirtyDayAvgMinutes;
        },
        summaryAsleepCount: function (parent) {
            return parent.summaryAsleepCount === undefined
                ? null
                : parent.summaryAsleepCount;
        },
        summaryAsleepMinutes: function (parent) {
            return parent.summaryAsleepMinutes === undefined
                ? null
                : parent.summaryAsleepMinutes;
        },
        summaryAwakeCount: function (parent) {
            return parent.summaryAwakeCount === undefined ? null : parent.summaryAwakeCount;
        },
        summaryAwakeMinutes: function (parent) {
            return parent.summaryAwakeMinutes === undefined
                ? null
                : parent.summaryAwakeMinutes;
        },
        summaryRestlessCount: function (parent) {
            return parent.summaryRestlessCount === undefined
                ? null
                : parent.summaryRestlessCount;
        },
        summaryRestlessMinutes: function (parent) {
            return parent.summaryRestlessMinutes === undefined
                ? null
                : parent.summaryRestlessMinutes;
        }
    };
})(SleepLogResolvers = exports.SleepLogResolvers || (exports.SleepLogResolvers = {}));
var SleepDataResolvers;
(function (SleepDataResolvers) {
    SleepDataResolvers.defaultResolvers = {
        id: function (parent) { return parent.id; },
        sleepLogId: function (parent) { return parent.sleepLogId; },
        dateTime: function (parent) { return parent.dateTime; },
        level: function (parent) { return parent.level; },
        second: function (parent) { return parent.second; }
    };
})(SleepDataResolvers = exports.SleepDataResolvers || (exports.SleepDataResolvers = {}));
var HeartLogResolvers;
(function (HeartLogResolvers) {
    HeartLogResolvers.defaultResolvers = {
        id: function (parent) { return parent.id; },
        dateTime: function (parent) { return parent.dateTime; },
        caloriesOutOfRange: function (parent) { return parent.caloriesOutOfRange; },
        minutesOutOfRange: function (parent) { return parent.minutesOutOfRange; },
        maxValueOutOfRange: function (parent) { return parent.maxValueOutOfRange; },
        minValueOutOfRange: function (parent) { return parent.minValueOutOfRange; },
        caloriesFatBurn: function (parent) { return parent.caloriesFatBurn; },
        minutesFatBurn: function (parent) { return parent.minutesFatBurn; },
        maxValueFatBurn: function (parent) { return parent.maxValueFatBurn; },
        minValueFatBurn: function (parent) { return parent.minValueFatBurn; },
        caloriesCardio: function (parent) { return parent.caloriesCardio; },
        minutesCardio: function (parent) { return parent.minutesCardio; },
        maxValueCardio: function (parent) { return parent.maxValueCardio; },
        minValueCardio: function (parent) { return parent.minValueCardio; },
        caloriesPeak: function (parent) { return parent.caloriesPeak; },
        minutesPeak: function (parent) { return parent.minutesPeak; },
        maxValuePeak: function (parent) { return parent.maxValuePeak; },
        minValuePeak: function (parent) { return parent.minValuePeak; }
    };
})(HeartLogResolvers = exports.HeartLogResolvers || (exports.HeartLogResolvers = {}));
var HeartDataResolvers;
(function (HeartDataResolvers) {
    HeartDataResolvers.defaultResolvers = {
        id: function (parent) { return parent.id; },
        heartLogId: function (parent) { return parent.heartLogId; },
        dateTime: function (parent) { return parent.dateTime; },
        heartRate: function (parent) { return parent.heartRate; }
    };
})(HeartDataResolvers = exports.HeartDataResolvers || (exports.HeartDataResolvers = {}));
var StepLogResolvers;
(function (StepLogResolvers) {
    StepLogResolvers.defaultResolvers = {
        id: function (parent) { return parent.id; },
        date: function (parent) { return parent.date; },
        totalSteps: function (parent) { return parent.totalSteps; }
    };
})(StepLogResolvers = exports.StepLogResolvers || (exports.StepLogResolvers = {}));
var StepDataResolvers;
(function (StepDataResolvers) {
    StepDataResolvers.defaultResolvers = {
        id: function (parent) { return parent.id; },
        stepLogId: function (parent) { return parent.stepLogId; },
        dateTime: function (parent) { return parent.dateTime; },
        steps: function (parent) { return parent.steps; }
    };
})(StepDataResolvers = exports.StepDataResolvers || (exports.StepDataResolvers = {}));
var CalorieLogResolvers;
(function (CalorieLogResolvers) {
    CalorieLogResolvers.defaultResolvers = {
        id: function (parent) { return parent.id; },
        date: function (parent) { return parent.date; },
        totalCalories: function (parent) { return parent.totalCalories; }
    };
})(CalorieLogResolvers = exports.CalorieLogResolvers || (exports.CalorieLogResolvers = {}));
var CalorieDataResolvers;
(function (CalorieDataResolvers) {
    CalorieDataResolvers.defaultResolvers = {
        id: function (parent) { return parent.id; },
        calorieLogId: function (parent) { return parent.calorieLogId; },
        dateTime: function (parent) { return parent.dateTime; },
        calories: function (parent) { return parent.calories; }
    };
})(CalorieDataResolvers = exports.CalorieDataResolvers || (exports.CalorieDataResolvers = {}));
var DistanceLogResolvers;
(function (DistanceLogResolvers) {
    DistanceLogResolvers.defaultResolvers = {
        id: function (parent) { return parent.id; },
        date: function (parent) { return parent.date; },
        totalDistance: function (parent) { return parent.totalDistance; }
    };
})(DistanceLogResolvers = exports.DistanceLogResolvers || (exports.DistanceLogResolvers = {}));
var DistanceDataResolvers;
(function (DistanceDataResolvers) {
    DistanceDataResolvers.defaultResolvers = {
        id: function (parent) { return parent.id; },
        distanceLogId: function (parent) { return parent.distanceLogId; },
        dateTime: function (parent) { return parent.dateTime; },
        distance: function (parent) { return parent.distance; }
    };
})(DistanceDataResolvers = exports.DistanceDataResolvers || (exports.DistanceDataResolvers = {}));
//# sourceMappingURL=graphqlgen.js.map