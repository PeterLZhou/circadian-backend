"use strict";
exports.__esModule = true;
exports.typeDefs = "type AggregateCalorieData {\n  count: Int!\n}\n\ntype AggregateCalorieLog {\n  count: Int!\n}\n\ntype AggregateDistanceData {\n  count: Int!\n}\n\ntype AggregateDistanceLog {\n  count: Int!\n}\n\ntype AggregateFitbitAccount {\n  count: Int!\n}\n\ntype AggregateGoogleFitAccount {\n  count: Int!\n}\n\ntype AggregateHeartData {\n  count: Int!\n}\n\ntype AggregateHeartLog {\n  count: Int!\n}\n\ntype AggregateSleepData {\n  count: Int!\n}\n\ntype AggregateSleepLog {\n  count: Int!\n}\n\ntype AggregateStepData {\n  count: Int!\n}\n\ntype AggregateStepLog {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\ntype CalorieData {\n  id: ID!\n  calorieLogId: ID!\n  dateTime: DateTime!\n  calories: Float!\n}\n\ntype CalorieDataConnection {\n  pageInfo: PageInfo!\n  edges: [CalorieDataEdge]!\n  aggregate: AggregateCalorieData!\n}\n\ninput CalorieDataCreateInput {\n  calorieLogId: ID!\n  dateTime: DateTime!\n  calories: Float!\n}\n\ninput CalorieDataCreateManyInput {\n  create: [CalorieDataCreateInput!]\n  connect: [CalorieDataWhereUniqueInput!]\n}\n\ntype CalorieDataEdge {\n  node: CalorieData!\n  cursor: String!\n}\n\nenum CalorieDataOrderByInput {\n  id_ASC\n  id_DESC\n  calorieLogId_ASC\n  calorieLogId_DESC\n  dateTime_ASC\n  dateTime_DESC\n  calories_ASC\n  calories_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype CalorieDataPreviousValues {\n  id: ID!\n  calorieLogId: ID!\n  dateTime: DateTime!\n  calories: Float!\n}\n\ntype CalorieDataSubscriptionPayload {\n  mutation: MutationType!\n  node: CalorieData\n  updatedFields: [String!]\n  previousValues: CalorieDataPreviousValues\n}\n\ninput CalorieDataSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: CalorieDataWhereInput\n  AND: [CalorieDataSubscriptionWhereInput!]\n  OR: [CalorieDataSubscriptionWhereInput!]\n  NOT: [CalorieDataSubscriptionWhereInput!]\n}\n\ninput CalorieDataUpdateDataInput {\n  calorieLogId: ID\n  dateTime: DateTime\n  calories: Float\n}\n\ninput CalorieDataUpdateInput {\n  calorieLogId: ID\n  dateTime: DateTime\n  calories: Float\n}\n\ninput CalorieDataUpdateManyInput {\n  create: [CalorieDataCreateInput!]\n  update: [CalorieDataUpdateWithWhereUniqueNestedInput!]\n  upsert: [CalorieDataUpsertWithWhereUniqueNestedInput!]\n  delete: [CalorieDataWhereUniqueInput!]\n  connect: [CalorieDataWhereUniqueInput!]\n  disconnect: [CalorieDataWhereUniqueInput!]\n}\n\ninput CalorieDataUpdateWithWhereUniqueNestedInput {\n  where: CalorieDataWhereUniqueInput!\n  data: CalorieDataUpdateDataInput!\n}\n\ninput CalorieDataUpsertWithWhereUniqueNestedInput {\n  where: CalorieDataWhereUniqueInput!\n  update: CalorieDataUpdateDataInput!\n  create: CalorieDataCreateInput!\n}\n\ninput CalorieDataWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  calorieLogId: ID\n  calorieLogId_not: ID\n  calorieLogId_in: [ID!]\n  calorieLogId_not_in: [ID!]\n  calorieLogId_lt: ID\n  calorieLogId_lte: ID\n  calorieLogId_gt: ID\n  calorieLogId_gte: ID\n  calorieLogId_contains: ID\n  calorieLogId_not_contains: ID\n  calorieLogId_starts_with: ID\n  calorieLogId_not_starts_with: ID\n  calorieLogId_ends_with: ID\n  calorieLogId_not_ends_with: ID\n  dateTime: DateTime\n  dateTime_not: DateTime\n  dateTime_in: [DateTime!]\n  dateTime_not_in: [DateTime!]\n  dateTime_lt: DateTime\n  dateTime_lte: DateTime\n  dateTime_gt: DateTime\n  dateTime_gte: DateTime\n  calories: Float\n  calories_not: Float\n  calories_in: [Float!]\n  calories_not_in: [Float!]\n  calories_lt: Float\n  calories_lte: Float\n  calories_gt: Float\n  calories_gte: Float\n  AND: [CalorieDataWhereInput!]\n  OR: [CalorieDataWhereInput!]\n  NOT: [CalorieDataWhereInput!]\n}\n\ninput CalorieDataWhereUniqueInput {\n  id: ID\n}\n\ntype CalorieLog {\n  id: ID!\n  date: DateTime!\n  totalCalories: Float!\n  intradayData(where: CalorieDataWhereInput, orderBy: CalorieDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CalorieData!]\n}\n\ntype CalorieLogConnection {\n  pageInfo: PageInfo!\n  edges: [CalorieLogEdge]!\n  aggregate: AggregateCalorieLog!\n}\n\ninput CalorieLogCreateInput {\n  date: DateTime!\n  totalCalories: Float!\n  intradayData: CalorieDataCreateManyInput\n}\n\ntype CalorieLogEdge {\n  node: CalorieLog!\n  cursor: String!\n}\n\nenum CalorieLogOrderByInput {\n  id_ASC\n  id_DESC\n  date_ASC\n  date_DESC\n  totalCalories_ASC\n  totalCalories_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype CalorieLogPreviousValues {\n  id: ID!\n  date: DateTime!\n  totalCalories: Float!\n}\n\ntype CalorieLogSubscriptionPayload {\n  mutation: MutationType!\n  node: CalorieLog\n  updatedFields: [String!]\n  previousValues: CalorieLogPreviousValues\n}\n\ninput CalorieLogSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: CalorieLogWhereInput\n  AND: [CalorieLogSubscriptionWhereInput!]\n  OR: [CalorieLogSubscriptionWhereInput!]\n  NOT: [CalorieLogSubscriptionWhereInput!]\n}\n\ninput CalorieLogUpdateInput {\n  date: DateTime\n  totalCalories: Float\n  intradayData: CalorieDataUpdateManyInput\n}\n\ninput CalorieLogWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  date: DateTime\n  date_not: DateTime\n  date_in: [DateTime!]\n  date_not_in: [DateTime!]\n  date_lt: DateTime\n  date_lte: DateTime\n  date_gt: DateTime\n  date_gte: DateTime\n  totalCalories: Float\n  totalCalories_not: Float\n  totalCalories_in: [Float!]\n  totalCalories_not_in: [Float!]\n  totalCalories_lt: Float\n  totalCalories_lte: Float\n  totalCalories_gt: Float\n  totalCalories_gte: Float\n  intradayData_every: CalorieDataWhereInput\n  intradayData_some: CalorieDataWhereInput\n  intradayData_none: CalorieDataWhereInput\n  AND: [CalorieLogWhereInput!]\n  OR: [CalorieLogWhereInput!]\n  NOT: [CalorieLogWhereInput!]\n}\n\ninput CalorieLogWhereUniqueInput {\n  id: ID\n}\n\nscalar DateTime\n\ntype DistanceData {\n  id: ID!\n  distanceLogId: ID!\n  dateTime: DateTime!\n  distance: Float!\n}\n\ntype DistanceDataConnection {\n  pageInfo: PageInfo!\n  edges: [DistanceDataEdge]!\n  aggregate: AggregateDistanceData!\n}\n\ninput DistanceDataCreateInput {\n  distanceLogId: ID!\n  dateTime: DateTime!\n  distance: Float!\n}\n\ninput DistanceDataCreateManyInput {\n  create: [DistanceDataCreateInput!]\n  connect: [DistanceDataWhereUniqueInput!]\n}\n\ntype DistanceDataEdge {\n  node: DistanceData!\n  cursor: String!\n}\n\nenum DistanceDataOrderByInput {\n  id_ASC\n  id_DESC\n  distanceLogId_ASC\n  distanceLogId_DESC\n  dateTime_ASC\n  dateTime_DESC\n  distance_ASC\n  distance_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype DistanceDataPreviousValues {\n  id: ID!\n  distanceLogId: ID!\n  dateTime: DateTime!\n  distance: Float!\n}\n\ntype DistanceDataSubscriptionPayload {\n  mutation: MutationType!\n  node: DistanceData\n  updatedFields: [String!]\n  previousValues: DistanceDataPreviousValues\n}\n\ninput DistanceDataSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: DistanceDataWhereInput\n  AND: [DistanceDataSubscriptionWhereInput!]\n  OR: [DistanceDataSubscriptionWhereInput!]\n  NOT: [DistanceDataSubscriptionWhereInput!]\n}\n\ninput DistanceDataUpdateDataInput {\n  distanceLogId: ID\n  dateTime: DateTime\n  distance: Float\n}\n\ninput DistanceDataUpdateInput {\n  distanceLogId: ID\n  dateTime: DateTime\n  distance: Float\n}\n\ninput DistanceDataUpdateManyInput {\n  create: [DistanceDataCreateInput!]\n  update: [DistanceDataUpdateWithWhereUniqueNestedInput!]\n  upsert: [DistanceDataUpsertWithWhereUniqueNestedInput!]\n  delete: [DistanceDataWhereUniqueInput!]\n  connect: [DistanceDataWhereUniqueInput!]\n  disconnect: [DistanceDataWhereUniqueInput!]\n}\n\ninput DistanceDataUpdateWithWhereUniqueNestedInput {\n  where: DistanceDataWhereUniqueInput!\n  data: DistanceDataUpdateDataInput!\n}\n\ninput DistanceDataUpsertWithWhereUniqueNestedInput {\n  where: DistanceDataWhereUniqueInput!\n  update: DistanceDataUpdateDataInput!\n  create: DistanceDataCreateInput!\n}\n\ninput DistanceDataWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  distanceLogId: ID\n  distanceLogId_not: ID\n  distanceLogId_in: [ID!]\n  distanceLogId_not_in: [ID!]\n  distanceLogId_lt: ID\n  distanceLogId_lte: ID\n  distanceLogId_gt: ID\n  distanceLogId_gte: ID\n  distanceLogId_contains: ID\n  distanceLogId_not_contains: ID\n  distanceLogId_starts_with: ID\n  distanceLogId_not_starts_with: ID\n  distanceLogId_ends_with: ID\n  distanceLogId_not_ends_with: ID\n  dateTime: DateTime\n  dateTime_not: DateTime\n  dateTime_in: [DateTime!]\n  dateTime_not_in: [DateTime!]\n  dateTime_lt: DateTime\n  dateTime_lte: DateTime\n  dateTime_gt: DateTime\n  dateTime_gte: DateTime\n  distance: Float\n  distance_not: Float\n  distance_in: [Float!]\n  distance_not_in: [Float!]\n  distance_lt: Float\n  distance_lte: Float\n  distance_gt: Float\n  distance_gte: Float\n  AND: [DistanceDataWhereInput!]\n  OR: [DistanceDataWhereInput!]\n  NOT: [DistanceDataWhereInput!]\n}\n\ninput DistanceDataWhereUniqueInput {\n  id: ID\n}\n\ntype DistanceLog {\n  id: ID!\n  date: DateTime!\n  totalDistance: Float!\n  intradayData(where: DistanceDataWhereInput, orderBy: DistanceDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DistanceData!]\n}\n\ntype DistanceLogConnection {\n  pageInfo: PageInfo!\n  edges: [DistanceLogEdge]!\n  aggregate: AggregateDistanceLog!\n}\n\ninput DistanceLogCreateInput {\n  date: DateTime!\n  totalDistance: Float!\n  intradayData: DistanceDataCreateManyInput\n}\n\ntype DistanceLogEdge {\n  node: DistanceLog!\n  cursor: String!\n}\n\nenum DistanceLogOrderByInput {\n  id_ASC\n  id_DESC\n  date_ASC\n  date_DESC\n  totalDistance_ASC\n  totalDistance_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype DistanceLogPreviousValues {\n  id: ID!\n  date: DateTime!\n  totalDistance: Float!\n}\n\ntype DistanceLogSubscriptionPayload {\n  mutation: MutationType!\n  node: DistanceLog\n  updatedFields: [String!]\n  previousValues: DistanceLogPreviousValues\n}\n\ninput DistanceLogSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: DistanceLogWhereInput\n  AND: [DistanceLogSubscriptionWhereInput!]\n  OR: [DistanceLogSubscriptionWhereInput!]\n  NOT: [DistanceLogSubscriptionWhereInput!]\n}\n\ninput DistanceLogUpdateInput {\n  date: DateTime\n  totalDistance: Float\n  intradayData: DistanceDataUpdateManyInput\n}\n\ninput DistanceLogWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  date: DateTime\n  date_not: DateTime\n  date_in: [DateTime!]\n  date_not_in: [DateTime!]\n  date_lt: DateTime\n  date_lte: DateTime\n  date_gt: DateTime\n  date_gte: DateTime\n  totalDistance: Float\n  totalDistance_not: Float\n  totalDistance_in: [Float!]\n  totalDistance_not_in: [Float!]\n  totalDistance_lt: Float\n  totalDistance_lte: Float\n  totalDistance_gt: Float\n  totalDistance_gte: Float\n  intradayData_every: DistanceDataWhereInput\n  intradayData_some: DistanceDataWhereInput\n  intradayData_none: DistanceDataWhereInput\n  AND: [DistanceLogWhereInput!]\n  OR: [DistanceLogWhereInput!]\n  NOT: [DistanceLogWhereInput!]\n}\n\ninput DistanceLogWhereUniqueInput {\n  id: ID\n}\n\ntype FitbitAccount {\n  id: ID!\n  userId: ID!\n  fitbitUserId: String!\n  refreshToken: String!\n  accessToken: String!\n  expiration: DateTime!\n}\n\ntype FitbitAccountConnection {\n  pageInfo: PageInfo!\n  edges: [FitbitAccountEdge]!\n  aggregate: AggregateFitbitAccount!\n}\n\ninput FitbitAccountCreateInput {\n  userId: ID!\n  fitbitUserId: String!\n  refreshToken: String!\n  accessToken: String!\n  expiration: DateTime!\n}\n\ninput FitbitAccountCreateOneInput {\n  create: FitbitAccountCreateInput\n  connect: FitbitAccountWhereUniqueInput\n}\n\ntype FitbitAccountEdge {\n  node: FitbitAccount!\n  cursor: String!\n}\n\nenum FitbitAccountOrderByInput {\n  id_ASC\n  id_DESC\n  userId_ASC\n  userId_DESC\n  fitbitUserId_ASC\n  fitbitUserId_DESC\n  refreshToken_ASC\n  refreshToken_DESC\n  accessToken_ASC\n  accessToken_DESC\n  expiration_ASC\n  expiration_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype FitbitAccountPreviousValues {\n  id: ID!\n  userId: ID!\n  fitbitUserId: String!\n  refreshToken: String!\n  accessToken: String!\n  expiration: DateTime!\n}\n\ntype FitbitAccountSubscriptionPayload {\n  mutation: MutationType!\n  node: FitbitAccount\n  updatedFields: [String!]\n  previousValues: FitbitAccountPreviousValues\n}\n\ninput FitbitAccountSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: FitbitAccountWhereInput\n  AND: [FitbitAccountSubscriptionWhereInput!]\n  OR: [FitbitAccountSubscriptionWhereInput!]\n  NOT: [FitbitAccountSubscriptionWhereInput!]\n}\n\ninput FitbitAccountUpdateDataInput {\n  userId: ID\n  fitbitUserId: String\n  refreshToken: String\n  accessToken: String\n  expiration: DateTime\n}\n\ninput FitbitAccountUpdateInput {\n  userId: ID\n  fitbitUserId: String\n  refreshToken: String\n  accessToken: String\n  expiration: DateTime\n}\n\ninput FitbitAccountUpdateOneInput {\n  create: FitbitAccountCreateInput\n  update: FitbitAccountUpdateDataInput\n  upsert: FitbitAccountUpsertNestedInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: FitbitAccountWhereUniqueInput\n}\n\ninput FitbitAccountUpsertNestedInput {\n  update: FitbitAccountUpdateDataInput!\n  create: FitbitAccountCreateInput!\n}\n\ninput FitbitAccountWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  userId: ID\n  userId_not: ID\n  userId_in: [ID!]\n  userId_not_in: [ID!]\n  userId_lt: ID\n  userId_lte: ID\n  userId_gt: ID\n  userId_gte: ID\n  userId_contains: ID\n  userId_not_contains: ID\n  userId_starts_with: ID\n  userId_not_starts_with: ID\n  userId_ends_with: ID\n  userId_not_ends_with: ID\n  fitbitUserId: String\n  fitbitUserId_not: String\n  fitbitUserId_in: [String!]\n  fitbitUserId_not_in: [String!]\n  fitbitUserId_lt: String\n  fitbitUserId_lte: String\n  fitbitUserId_gt: String\n  fitbitUserId_gte: String\n  fitbitUserId_contains: String\n  fitbitUserId_not_contains: String\n  fitbitUserId_starts_with: String\n  fitbitUserId_not_starts_with: String\n  fitbitUserId_ends_with: String\n  fitbitUserId_not_ends_with: String\n  refreshToken: String\n  refreshToken_not: String\n  refreshToken_in: [String!]\n  refreshToken_not_in: [String!]\n  refreshToken_lt: String\n  refreshToken_lte: String\n  refreshToken_gt: String\n  refreshToken_gte: String\n  refreshToken_contains: String\n  refreshToken_not_contains: String\n  refreshToken_starts_with: String\n  refreshToken_not_starts_with: String\n  refreshToken_ends_with: String\n  refreshToken_not_ends_with: String\n  accessToken: String\n  accessToken_not: String\n  accessToken_in: [String!]\n  accessToken_not_in: [String!]\n  accessToken_lt: String\n  accessToken_lte: String\n  accessToken_gt: String\n  accessToken_gte: String\n  accessToken_contains: String\n  accessToken_not_contains: String\n  accessToken_starts_with: String\n  accessToken_not_starts_with: String\n  accessToken_ends_with: String\n  accessToken_not_ends_with: String\n  expiration: DateTime\n  expiration_not: DateTime\n  expiration_in: [DateTime!]\n  expiration_not_in: [DateTime!]\n  expiration_lt: DateTime\n  expiration_lte: DateTime\n  expiration_gt: DateTime\n  expiration_gte: DateTime\n  AND: [FitbitAccountWhereInput!]\n  OR: [FitbitAccountWhereInput!]\n  NOT: [FitbitAccountWhereInput!]\n}\n\ninput FitbitAccountWhereUniqueInput {\n  id: ID\n  userId: ID\n}\n\ntype GoogleFitAccount {\n  id: ID!\n  userId: ID!\n  refreshToken: String!\n  accessToken: String!\n  expiration: DateTime!\n}\n\ntype GoogleFitAccountConnection {\n  pageInfo: PageInfo!\n  edges: [GoogleFitAccountEdge]!\n  aggregate: AggregateGoogleFitAccount!\n}\n\ninput GoogleFitAccountCreateInput {\n  userId: ID!\n  refreshToken: String!\n  accessToken: String!\n  expiration: DateTime!\n}\n\ninput GoogleFitAccountCreateOneInput {\n  create: GoogleFitAccountCreateInput\n  connect: GoogleFitAccountWhereUniqueInput\n}\n\ntype GoogleFitAccountEdge {\n  node: GoogleFitAccount!\n  cursor: String!\n}\n\nenum GoogleFitAccountOrderByInput {\n  id_ASC\n  id_DESC\n  userId_ASC\n  userId_DESC\n  refreshToken_ASC\n  refreshToken_DESC\n  accessToken_ASC\n  accessToken_DESC\n  expiration_ASC\n  expiration_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype GoogleFitAccountPreviousValues {\n  id: ID!\n  userId: ID!\n  refreshToken: String!\n  accessToken: String!\n  expiration: DateTime!\n}\n\ntype GoogleFitAccountSubscriptionPayload {\n  mutation: MutationType!\n  node: GoogleFitAccount\n  updatedFields: [String!]\n  previousValues: GoogleFitAccountPreviousValues\n}\n\ninput GoogleFitAccountSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: GoogleFitAccountWhereInput\n  AND: [GoogleFitAccountSubscriptionWhereInput!]\n  OR: [GoogleFitAccountSubscriptionWhereInput!]\n  NOT: [GoogleFitAccountSubscriptionWhereInput!]\n}\n\ninput GoogleFitAccountUpdateDataInput {\n  userId: ID\n  refreshToken: String\n  accessToken: String\n  expiration: DateTime\n}\n\ninput GoogleFitAccountUpdateInput {\n  userId: ID\n  refreshToken: String\n  accessToken: String\n  expiration: DateTime\n}\n\ninput GoogleFitAccountUpdateOneInput {\n  create: GoogleFitAccountCreateInput\n  update: GoogleFitAccountUpdateDataInput\n  upsert: GoogleFitAccountUpsertNestedInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: GoogleFitAccountWhereUniqueInput\n}\n\ninput GoogleFitAccountUpsertNestedInput {\n  update: GoogleFitAccountUpdateDataInput!\n  create: GoogleFitAccountCreateInput!\n}\n\ninput GoogleFitAccountWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  userId: ID\n  userId_not: ID\n  userId_in: [ID!]\n  userId_not_in: [ID!]\n  userId_lt: ID\n  userId_lte: ID\n  userId_gt: ID\n  userId_gte: ID\n  userId_contains: ID\n  userId_not_contains: ID\n  userId_starts_with: ID\n  userId_not_starts_with: ID\n  userId_ends_with: ID\n  userId_not_ends_with: ID\n  refreshToken: String\n  refreshToken_not: String\n  refreshToken_in: [String!]\n  refreshToken_not_in: [String!]\n  refreshToken_lt: String\n  refreshToken_lte: String\n  refreshToken_gt: String\n  refreshToken_gte: String\n  refreshToken_contains: String\n  refreshToken_not_contains: String\n  refreshToken_starts_with: String\n  refreshToken_not_starts_with: String\n  refreshToken_ends_with: String\n  refreshToken_not_ends_with: String\n  accessToken: String\n  accessToken_not: String\n  accessToken_in: [String!]\n  accessToken_not_in: [String!]\n  accessToken_lt: String\n  accessToken_lte: String\n  accessToken_gt: String\n  accessToken_gte: String\n  accessToken_contains: String\n  accessToken_not_contains: String\n  accessToken_starts_with: String\n  accessToken_not_starts_with: String\n  accessToken_ends_with: String\n  accessToken_not_ends_with: String\n  expiration: DateTime\n  expiration_not: DateTime\n  expiration_in: [DateTime!]\n  expiration_not_in: [DateTime!]\n  expiration_lt: DateTime\n  expiration_lte: DateTime\n  expiration_gt: DateTime\n  expiration_gte: DateTime\n  AND: [GoogleFitAccountWhereInput!]\n  OR: [GoogleFitAccountWhereInput!]\n  NOT: [GoogleFitAccountWhereInput!]\n}\n\ninput GoogleFitAccountWhereUniqueInput {\n  id: ID\n  userId: ID\n}\n\ntype HeartData {\n  id: ID!\n  heartLogId: ID!\n  dateTime: DateTime!\n  heartRate: Float!\n}\n\ntype HeartDataConnection {\n  pageInfo: PageInfo!\n  edges: [HeartDataEdge]!\n  aggregate: AggregateHeartData!\n}\n\ninput HeartDataCreateInput {\n  heartLogId: ID!\n  dateTime: DateTime!\n  heartRate: Float!\n}\n\ninput HeartDataCreateManyInput {\n  create: [HeartDataCreateInput!]\n  connect: [HeartDataWhereUniqueInput!]\n}\n\ntype HeartDataEdge {\n  node: HeartData!\n  cursor: String!\n}\n\nenum HeartDataOrderByInput {\n  id_ASC\n  id_DESC\n  heartLogId_ASC\n  heartLogId_DESC\n  dateTime_ASC\n  dateTime_DESC\n  heartRate_ASC\n  heartRate_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype HeartDataPreviousValues {\n  id: ID!\n  heartLogId: ID!\n  dateTime: DateTime!\n  heartRate: Float!\n}\n\ntype HeartDataSubscriptionPayload {\n  mutation: MutationType!\n  node: HeartData\n  updatedFields: [String!]\n  previousValues: HeartDataPreviousValues\n}\n\ninput HeartDataSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: HeartDataWhereInput\n  AND: [HeartDataSubscriptionWhereInput!]\n  OR: [HeartDataSubscriptionWhereInput!]\n  NOT: [HeartDataSubscriptionWhereInput!]\n}\n\ninput HeartDataUpdateDataInput {\n  heartLogId: ID\n  dateTime: DateTime\n  heartRate: Float\n}\n\ninput HeartDataUpdateInput {\n  heartLogId: ID\n  dateTime: DateTime\n  heartRate: Float\n}\n\ninput HeartDataUpdateManyInput {\n  create: [HeartDataCreateInput!]\n  update: [HeartDataUpdateWithWhereUniqueNestedInput!]\n  upsert: [HeartDataUpsertWithWhereUniqueNestedInput!]\n  delete: [HeartDataWhereUniqueInput!]\n  connect: [HeartDataWhereUniqueInput!]\n  disconnect: [HeartDataWhereUniqueInput!]\n}\n\ninput HeartDataUpdateWithWhereUniqueNestedInput {\n  where: HeartDataWhereUniqueInput!\n  data: HeartDataUpdateDataInput!\n}\n\ninput HeartDataUpsertWithWhereUniqueNestedInput {\n  where: HeartDataWhereUniqueInput!\n  update: HeartDataUpdateDataInput!\n  create: HeartDataCreateInput!\n}\n\ninput HeartDataWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  heartLogId: ID\n  heartLogId_not: ID\n  heartLogId_in: [ID!]\n  heartLogId_not_in: [ID!]\n  heartLogId_lt: ID\n  heartLogId_lte: ID\n  heartLogId_gt: ID\n  heartLogId_gte: ID\n  heartLogId_contains: ID\n  heartLogId_not_contains: ID\n  heartLogId_starts_with: ID\n  heartLogId_not_starts_with: ID\n  heartLogId_ends_with: ID\n  heartLogId_not_ends_with: ID\n  dateTime: DateTime\n  dateTime_not: DateTime\n  dateTime_in: [DateTime!]\n  dateTime_not_in: [DateTime!]\n  dateTime_lt: DateTime\n  dateTime_lte: DateTime\n  dateTime_gt: DateTime\n  dateTime_gte: DateTime\n  heartRate: Float\n  heartRate_not: Float\n  heartRate_in: [Float!]\n  heartRate_not_in: [Float!]\n  heartRate_lt: Float\n  heartRate_lte: Float\n  heartRate_gt: Float\n  heartRate_gte: Float\n  AND: [HeartDataWhereInput!]\n  OR: [HeartDataWhereInput!]\n  NOT: [HeartDataWhereInput!]\n}\n\ninput HeartDataWhereUniqueInput {\n  id: ID\n}\n\ntype HeartLog {\n  id: ID!\n  dateTime: DateTime!\n  caloriesOutOfRange: Int!\n  minutesOutOfRange: Int!\n  maxValueOutOfRange: Int!\n  minValueOutOfRange: Int!\n  caloriesFatBurn: Int!\n  minutesFatBurn: Int!\n  maxValueFatBurn: Int!\n  minValueFatBurn: Int!\n  caloriesCardio: Int!\n  minutesCardio: Int!\n  maxValueCardio: Int!\n  minValueCardio: Int!\n  caloriesPeak: Int!\n  minutesPeak: Int!\n  maxValuePeak: Int!\n  minValuePeak: Int!\n  intradayData(where: HeartDataWhereInput, orderBy: HeartDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [HeartData!]\n}\n\ntype HeartLogConnection {\n  pageInfo: PageInfo!\n  edges: [HeartLogEdge]!\n  aggregate: AggregateHeartLog!\n}\n\ninput HeartLogCreateInput {\n  dateTime: DateTime!\n  caloriesOutOfRange: Int!\n  minutesOutOfRange: Int!\n  maxValueOutOfRange: Int!\n  minValueOutOfRange: Int!\n  caloriesFatBurn: Int!\n  minutesFatBurn: Int!\n  maxValueFatBurn: Int!\n  minValueFatBurn: Int!\n  caloriesCardio: Int!\n  minutesCardio: Int!\n  maxValueCardio: Int!\n  minValueCardio: Int!\n  caloriesPeak: Int!\n  minutesPeak: Int!\n  maxValuePeak: Int!\n  minValuePeak: Int!\n  intradayData: HeartDataCreateManyInput\n}\n\ntype HeartLogEdge {\n  node: HeartLog!\n  cursor: String!\n}\n\nenum HeartLogOrderByInput {\n  id_ASC\n  id_DESC\n  dateTime_ASC\n  dateTime_DESC\n  caloriesOutOfRange_ASC\n  caloriesOutOfRange_DESC\n  minutesOutOfRange_ASC\n  minutesOutOfRange_DESC\n  maxValueOutOfRange_ASC\n  maxValueOutOfRange_DESC\n  minValueOutOfRange_ASC\n  minValueOutOfRange_DESC\n  caloriesFatBurn_ASC\n  caloriesFatBurn_DESC\n  minutesFatBurn_ASC\n  minutesFatBurn_DESC\n  maxValueFatBurn_ASC\n  maxValueFatBurn_DESC\n  minValueFatBurn_ASC\n  minValueFatBurn_DESC\n  caloriesCardio_ASC\n  caloriesCardio_DESC\n  minutesCardio_ASC\n  minutesCardio_DESC\n  maxValueCardio_ASC\n  maxValueCardio_DESC\n  minValueCardio_ASC\n  minValueCardio_DESC\n  caloriesPeak_ASC\n  caloriesPeak_DESC\n  minutesPeak_ASC\n  minutesPeak_DESC\n  maxValuePeak_ASC\n  maxValuePeak_DESC\n  minValuePeak_ASC\n  minValuePeak_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype HeartLogPreviousValues {\n  id: ID!\n  dateTime: DateTime!\n  caloriesOutOfRange: Int!\n  minutesOutOfRange: Int!\n  maxValueOutOfRange: Int!\n  minValueOutOfRange: Int!\n  caloriesFatBurn: Int!\n  minutesFatBurn: Int!\n  maxValueFatBurn: Int!\n  minValueFatBurn: Int!\n  caloriesCardio: Int!\n  minutesCardio: Int!\n  maxValueCardio: Int!\n  minValueCardio: Int!\n  caloriesPeak: Int!\n  minutesPeak: Int!\n  maxValuePeak: Int!\n  minValuePeak: Int!\n}\n\ntype HeartLogSubscriptionPayload {\n  mutation: MutationType!\n  node: HeartLog\n  updatedFields: [String!]\n  previousValues: HeartLogPreviousValues\n}\n\ninput HeartLogSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: HeartLogWhereInput\n  AND: [HeartLogSubscriptionWhereInput!]\n  OR: [HeartLogSubscriptionWhereInput!]\n  NOT: [HeartLogSubscriptionWhereInput!]\n}\n\ninput HeartLogUpdateInput {\n  dateTime: DateTime\n  caloriesOutOfRange: Int\n  minutesOutOfRange: Int\n  maxValueOutOfRange: Int\n  minValueOutOfRange: Int\n  caloriesFatBurn: Int\n  minutesFatBurn: Int\n  maxValueFatBurn: Int\n  minValueFatBurn: Int\n  caloriesCardio: Int\n  minutesCardio: Int\n  maxValueCardio: Int\n  minValueCardio: Int\n  caloriesPeak: Int\n  minutesPeak: Int\n  maxValuePeak: Int\n  minValuePeak: Int\n  intradayData: HeartDataUpdateManyInput\n}\n\ninput HeartLogWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  dateTime: DateTime\n  dateTime_not: DateTime\n  dateTime_in: [DateTime!]\n  dateTime_not_in: [DateTime!]\n  dateTime_lt: DateTime\n  dateTime_lte: DateTime\n  dateTime_gt: DateTime\n  dateTime_gte: DateTime\n  caloriesOutOfRange: Int\n  caloriesOutOfRange_not: Int\n  caloriesOutOfRange_in: [Int!]\n  caloriesOutOfRange_not_in: [Int!]\n  caloriesOutOfRange_lt: Int\n  caloriesOutOfRange_lte: Int\n  caloriesOutOfRange_gt: Int\n  caloriesOutOfRange_gte: Int\n  minutesOutOfRange: Int\n  minutesOutOfRange_not: Int\n  minutesOutOfRange_in: [Int!]\n  minutesOutOfRange_not_in: [Int!]\n  minutesOutOfRange_lt: Int\n  minutesOutOfRange_lte: Int\n  minutesOutOfRange_gt: Int\n  minutesOutOfRange_gte: Int\n  maxValueOutOfRange: Int\n  maxValueOutOfRange_not: Int\n  maxValueOutOfRange_in: [Int!]\n  maxValueOutOfRange_not_in: [Int!]\n  maxValueOutOfRange_lt: Int\n  maxValueOutOfRange_lte: Int\n  maxValueOutOfRange_gt: Int\n  maxValueOutOfRange_gte: Int\n  minValueOutOfRange: Int\n  minValueOutOfRange_not: Int\n  minValueOutOfRange_in: [Int!]\n  minValueOutOfRange_not_in: [Int!]\n  minValueOutOfRange_lt: Int\n  minValueOutOfRange_lte: Int\n  minValueOutOfRange_gt: Int\n  minValueOutOfRange_gte: Int\n  caloriesFatBurn: Int\n  caloriesFatBurn_not: Int\n  caloriesFatBurn_in: [Int!]\n  caloriesFatBurn_not_in: [Int!]\n  caloriesFatBurn_lt: Int\n  caloriesFatBurn_lte: Int\n  caloriesFatBurn_gt: Int\n  caloriesFatBurn_gte: Int\n  minutesFatBurn: Int\n  minutesFatBurn_not: Int\n  minutesFatBurn_in: [Int!]\n  minutesFatBurn_not_in: [Int!]\n  minutesFatBurn_lt: Int\n  minutesFatBurn_lte: Int\n  minutesFatBurn_gt: Int\n  minutesFatBurn_gte: Int\n  maxValueFatBurn: Int\n  maxValueFatBurn_not: Int\n  maxValueFatBurn_in: [Int!]\n  maxValueFatBurn_not_in: [Int!]\n  maxValueFatBurn_lt: Int\n  maxValueFatBurn_lte: Int\n  maxValueFatBurn_gt: Int\n  maxValueFatBurn_gte: Int\n  minValueFatBurn: Int\n  minValueFatBurn_not: Int\n  minValueFatBurn_in: [Int!]\n  minValueFatBurn_not_in: [Int!]\n  minValueFatBurn_lt: Int\n  minValueFatBurn_lte: Int\n  minValueFatBurn_gt: Int\n  minValueFatBurn_gte: Int\n  caloriesCardio: Int\n  caloriesCardio_not: Int\n  caloriesCardio_in: [Int!]\n  caloriesCardio_not_in: [Int!]\n  caloriesCardio_lt: Int\n  caloriesCardio_lte: Int\n  caloriesCardio_gt: Int\n  caloriesCardio_gte: Int\n  minutesCardio: Int\n  minutesCardio_not: Int\n  minutesCardio_in: [Int!]\n  minutesCardio_not_in: [Int!]\n  minutesCardio_lt: Int\n  minutesCardio_lte: Int\n  minutesCardio_gt: Int\n  minutesCardio_gte: Int\n  maxValueCardio: Int\n  maxValueCardio_not: Int\n  maxValueCardio_in: [Int!]\n  maxValueCardio_not_in: [Int!]\n  maxValueCardio_lt: Int\n  maxValueCardio_lte: Int\n  maxValueCardio_gt: Int\n  maxValueCardio_gte: Int\n  minValueCardio: Int\n  minValueCardio_not: Int\n  minValueCardio_in: [Int!]\n  minValueCardio_not_in: [Int!]\n  minValueCardio_lt: Int\n  minValueCardio_lte: Int\n  minValueCardio_gt: Int\n  minValueCardio_gte: Int\n  caloriesPeak: Int\n  caloriesPeak_not: Int\n  caloriesPeak_in: [Int!]\n  caloriesPeak_not_in: [Int!]\n  caloriesPeak_lt: Int\n  caloriesPeak_lte: Int\n  caloriesPeak_gt: Int\n  caloriesPeak_gte: Int\n  minutesPeak: Int\n  minutesPeak_not: Int\n  minutesPeak_in: [Int!]\n  minutesPeak_not_in: [Int!]\n  minutesPeak_lt: Int\n  minutesPeak_lte: Int\n  minutesPeak_gt: Int\n  minutesPeak_gte: Int\n  maxValuePeak: Int\n  maxValuePeak_not: Int\n  maxValuePeak_in: [Int!]\n  maxValuePeak_not_in: [Int!]\n  maxValuePeak_lt: Int\n  maxValuePeak_lte: Int\n  maxValuePeak_gt: Int\n  maxValuePeak_gte: Int\n  minValuePeak: Int\n  minValuePeak_not: Int\n  minValuePeak_in: [Int!]\n  minValuePeak_not_in: [Int!]\n  minValuePeak_lt: Int\n  minValuePeak_lte: Int\n  minValuePeak_gt: Int\n  minValuePeak_gte: Int\n  intradayData_every: HeartDataWhereInput\n  intradayData_some: HeartDataWhereInput\n  intradayData_none: HeartDataWhereInput\n  AND: [HeartLogWhereInput!]\n  OR: [HeartLogWhereInput!]\n  NOT: [HeartLogWhereInput!]\n}\n\ninput HeartLogWhereUniqueInput {\n  id: ID\n}\n\nscalar Long\n\ntype Mutation {\n  createCalorieData(data: CalorieDataCreateInput!): CalorieData!\n  updateCalorieData(data: CalorieDataUpdateInput!, where: CalorieDataWhereUniqueInput!): CalorieData\n  updateManyCalorieDatas(data: CalorieDataUpdateInput!, where: CalorieDataWhereInput): BatchPayload!\n  upsertCalorieData(where: CalorieDataWhereUniqueInput!, create: CalorieDataCreateInput!, update: CalorieDataUpdateInput!): CalorieData!\n  deleteCalorieData(where: CalorieDataWhereUniqueInput!): CalorieData\n  deleteManyCalorieDatas(where: CalorieDataWhereInput): BatchPayload!\n  createCalorieLog(data: CalorieLogCreateInput!): CalorieLog!\n  updateCalorieLog(data: CalorieLogUpdateInput!, where: CalorieLogWhereUniqueInput!): CalorieLog\n  updateManyCalorieLogs(data: CalorieLogUpdateInput!, where: CalorieLogWhereInput): BatchPayload!\n  upsertCalorieLog(where: CalorieLogWhereUniqueInput!, create: CalorieLogCreateInput!, update: CalorieLogUpdateInput!): CalorieLog!\n  deleteCalorieLog(where: CalorieLogWhereUniqueInput!): CalorieLog\n  deleteManyCalorieLogs(where: CalorieLogWhereInput): BatchPayload!\n  createDistanceData(data: DistanceDataCreateInput!): DistanceData!\n  updateDistanceData(data: DistanceDataUpdateInput!, where: DistanceDataWhereUniqueInput!): DistanceData\n  updateManyDistanceDatas(data: DistanceDataUpdateInput!, where: DistanceDataWhereInput): BatchPayload!\n  upsertDistanceData(where: DistanceDataWhereUniqueInput!, create: DistanceDataCreateInput!, update: DistanceDataUpdateInput!): DistanceData!\n  deleteDistanceData(where: DistanceDataWhereUniqueInput!): DistanceData\n  deleteManyDistanceDatas(where: DistanceDataWhereInput): BatchPayload!\n  createDistanceLog(data: DistanceLogCreateInput!): DistanceLog!\n  updateDistanceLog(data: DistanceLogUpdateInput!, where: DistanceLogWhereUniqueInput!): DistanceLog\n  updateManyDistanceLogs(data: DistanceLogUpdateInput!, where: DistanceLogWhereInput): BatchPayload!\n  upsertDistanceLog(where: DistanceLogWhereUniqueInput!, create: DistanceLogCreateInput!, update: DistanceLogUpdateInput!): DistanceLog!\n  deleteDistanceLog(where: DistanceLogWhereUniqueInput!): DistanceLog\n  deleteManyDistanceLogs(where: DistanceLogWhereInput): BatchPayload!\n  createFitbitAccount(data: FitbitAccountCreateInput!): FitbitAccount!\n  updateFitbitAccount(data: FitbitAccountUpdateInput!, where: FitbitAccountWhereUniqueInput!): FitbitAccount\n  updateManyFitbitAccounts(data: FitbitAccountUpdateInput!, where: FitbitAccountWhereInput): BatchPayload!\n  upsertFitbitAccount(where: FitbitAccountWhereUniqueInput!, create: FitbitAccountCreateInput!, update: FitbitAccountUpdateInput!): FitbitAccount!\n  deleteFitbitAccount(where: FitbitAccountWhereUniqueInput!): FitbitAccount\n  deleteManyFitbitAccounts(where: FitbitAccountWhereInput): BatchPayload!\n  createGoogleFitAccount(data: GoogleFitAccountCreateInput!): GoogleFitAccount!\n  updateGoogleFitAccount(data: GoogleFitAccountUpdateInput!, where: GoogleFitAccountWhereUniqueInput!): GoogleFitAccount\n  updateManyGoogleFitAccounts(data: GoogleFitAccountUpdateInput!, where: GoogleFitAccountWhereInput): BatchPayload!\n  upsertGoogleFitAccount(where: GoogleFitAccountWhereUniqueInput!, create: GoogleFitAccountCreateInput!, update: GoogleFitAccountUpdateInput!): GoogleFitAccount!\n  deleteGoogleFitAccount(where: GoogleFitAccountWhereUniqueInput!): GoogleFitAccount\n  deleteManyGoogleFitAccounts(where: GoogleFitAccountWhereInput): BatchPayload!\n  createHeartData(data: HeartDataCreateInput!): HeartData!\n  updateHeartData(data: HeartDataUpdateInput!, where: HeartDataWhereUniqueInput!): HeartData\n  updateManyHeartDatas(data: HeartDataUpdateInput!, where: HeartDataWhereInput): BatchPayload!\n  upsertHeartData(where: HeartDataWhereUniqueInput!, create: HeartDataCreateInput!, update: HeartDataUpdateInput!): HeartData!\n  deleteHeartData(where: HeartDataWhereUniqueInput!): HeartData\n  deleteManyHeartDatas(where: HeartDataWhereInput): BatchPayload!\n  createHeartLog(data: HeartLogCreateInput!): HeartLog!\n  updateHeartLog(data: HeartLogUpdateInput!, where: HeartLogWhereUniqueInput!): HeartLog\n  updateManyHeartLogs(data: HeartLogUpdateInput!, where: HeartLogWhereInput): BatchPayload!\n  upsertHeartLog(where: HeartLogWhereUniqueInput!, create: HeartLogCreateInput!, update: HeartLogUpdateInput!): HeartLog!\n  deleteHeartLog(where: HeartLogWhereUniqueInput!): HeartLog\n  deleteManyHeartLogs(where: HeartLogWhereInput): BatchPayload!\n  createSleepData(data: SleepDataCreateInput!): SleepData!\n  updateSleepData(data: SleepDataUpdateInput!, where: SleepDataWhereUniqueInput!): SleepData\n  updateManySleepDatas(data: SleepDataUpdateInput!, where: SleepDataWhereInput): BatchPayload!\n  upsertSleepData(where: SleepDataWhereUniqueInput!, create: SleepDataCreateInput!, update: SleepDataUpdateInput!): SleepData!\n  deleteSleepData(where: SleepDataWhereUniqueInput!): SleepData\n  deleteManySleepDatas(where: SleepDataWhereInput): BatchPayload!\n  createSleepLog(data: SleepLogCreateInput!): SleepLog!\n  updateSleepLog(data: SleepLogUpdateInput!, where: SleepLogWhereUniqueInput!): SleepLog\n  updateManySleepLogs(data: SleepLogUpdateInput!, where: SleepLogWhereInput): BatchPayload!\n  upsertSleepLog(where: SleepLogWhereUniqueInput!, create: SleepLogCreateInput!, update: SleepLogUpdateInput!): SleepLog!\n  deleteSleepLog(where: SleepLogWhereUniqueInput!): SleepLog\n  deleteManySleepLogs(where: SleepLogWhereInput): BatchPayload!\n  createStepData(data: StepDataCreateInput!): StepData!\n  updateStepData(data: StepDataUpdateInput!, where: StepDataWhereUniqueInput!): StepData\n  updateManyStepDatas(data: StepDataUpdateInput!, where: StepDataWhereInput): BatchPayload!\n  upsertStepData(where: StepDataWhereUniqueInput!, create: StepDataCreateInput!, update: StepDataUpdateInput!): StepData!\n  deleteStepData(where: StepDataWhereUniqueInput!): StepData\n  deleteManyStepDatas(where: StepDataWhereInput): BatchPayload!\n  createStepLog(data: StepLogCreateInput!): StepLog!\n  updateStepLog(data: StepLogUpdateInput!, where: StepLogWhereUniqueInput!): StepLog\n  updateManyStepLogs(data: StepLogUpdateInput!, where: StepLogWhereInput): BatchPayload!\n  upsertStepLog(where: StepLogWhereUniqueInput!, create: StepLogCreateInput!, update: StepLogUpdateInput!): StepLog!\n  deleteStepLog(where: StepLogWhereUniqueInput!): StepLog\n  deleteManyStepLogs(where: StepLogWhereInput): BatchPayload!\n  createUser(data: UserCreateInput!): User!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  deleteUser(where: UserWhereUniqueInput!): User\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype Query {\n  calorieData(where: CalorieDataWhereUniqueInput!): CalorieData\n  calorieDatas(where: CalorieDataWhereInput, orderBy: CalorieDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CalorieData]!\n  calorieDatasConnection(where: CalorieDataWhereInput, orderBy: CalorieDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CalorieDataConnection!\n  calorieLog(where: CalorieLogWhereUniqueInput!): CalorieLog\n  calorieLogs(where: CalorieLogWhereInput, orderBy: CalorieLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CalorieLog]!\n  calorieLogsConnection(where: CalorieLogWhereInput, orderBy: CalorieLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CalorieLogConnection!\n  distanceData(where: DistanceDataWhereUniqueInput!): DistanceData\n  distanceDatas(where: DistanceDataWhereInput, orderBy: DistanceDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DistanceData]!\n  distanceDatasConnection(where: DistanceDataWhereInput, orderBy: DistanceDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DistanceDataConnection!\n  distanceLog(where: DistanceLogWhereUniqueInput!): DistanceLog\n  distanceLogs(where: DistanceLogWhereInput, orderBy: DistanceLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DistanceLog]!\n  distanceLogsConnection(where: DistanceLogWhereInput, orderBy: DistanceLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DistanceLogConnection!\n  fitbitAccount(where: FitbitAccountWhereUniqueInput!): FitbitAccount\n  fitbitAccounts(where: FitbitAccountWhereInput, orderBy: FitbitAccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FitbitAccount]!\n  fitbitAccountsConnection(where: FitbitAccountWhereInput, orderBy: FitbitAccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FitbitAccountConnection!\n  googleFitAccount(where: GoogleFitAccountWhereUniqueInput!): GoogleFitAccount\n  googleFitAccounts(where: GoogleFitAccountWhereInput, orderBy: GoogleFitAccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GoogleFitAccount]!\n  googleFitAccountsConnection(where: GoogleFitAccountWhereInput, orderBy: GoogleFitAccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GoogleFitAccountConnection!\n  heartData(where: HeartDataWhereUniqueInput!): HeartData\n  heartDatas(where: HeartDataWhereInput, orderBy: HeartDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [HeartData]!\n  heartDatasConnection(where: HeartDataWhereInput, orderBy: HeartDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): HeartDataConnection!\n  heartLog(where: HeartLogWhereUniqueInput!): HeartLog\n  heartLogs(where: HeartLogWhereInput, orderBy: HeartLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [HeartLog]!\n  heartLogsConnection(where: HeartLogWhereInput, orderBy: HeartLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): HeartLogConnection!\n  sleepData(where: SleepDataWhereUniqueInput!): SleepData\n  sleepDatas(where: SleepDataWhereInput, orderBy: SleepDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SleepData]!\n  sleepDatasConnection(where: SleepDataWhereInput, orderBy: SleepDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SleepDataConnection!\n  sleepLog(where: SleepLogWhereUniqueInput!): SleepLog\n  sleepLogs(where: SleepLogWhereInput, orderBy: SleepLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SleepLog]!\n  sleepLogsConnection(where: SleepLogWhereInput, orderBy: SleepLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SleepLogConnection!\n  stepData(where: StepDataWhereUniqueInput!): StepData\n  stepDatas(where: StepDataWhereInput, orderBy: StepDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [StepData]!\n  stepDatasConnection(where: StepDataWhereInput, orderBy: StepDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): StepDataConnection!\n  stepLog(where: StepLogWhereUniqueInput!): StepLog\n  stepLogs(where: StepLogWhereInput, orderBy: StepLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [StepLog]!\n  stepLogsConnection(where: StepLogWhereInput, orderBy: StepLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): StepLogConnection!\n  user(where: UserWhereUniqueInput!): User\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  node(id: ID!): Node\n}\n\ntype SleepData {\n  id: ID!\n  sleepLogId: ID!\n  dateTime: DateTime!\n  level: String!\n  second: Int!\n}\n\ntype SleepDataConnection {\n  pageInfo: PageInfo!\n  edges: [SleepDataEdge]!\n  aggregate: AggregateSleepData!\n}\n\ninput SleepDataCreateInput {\n  sleepLogId: ID!\n  dateTime: DateTime!\n  level: String!\n  second: Int!\n}\n\ninput SleepDataCreateManyInput {\n  create: [SleepDataCreateInput!]\n  connect: [SleepDataWhereUniqueInput!]\n}\n\ntype SleepDataEdge {\n  node: SleepData!\n  cursor: String!\n}\n\nenum SleepDataOrderByInput {\n  id_ASC\n  id_DESC\n  sleepLogId_ASC\n  sleepLogId_DESC\n  dateTime_ASC\n  dateTime_DESC\n  level_ASC\n  level_DESC\n  second_ASC\n  second_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype SleepDataPreviousValues {\n  id: ID!\n  sleepLogId: ID!\n  dateTime: DateTime!\n  level: String!\n  second: Int!\n}\n\ntype SleepDataSubscriptionPayload {\n  mutation: MutationType!\n  node: SleepData\n  updatedFields: [String!]\n  previousValues: SleepDataPreviousValues\n}\n\ninput SleepDataSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: SleepDataWhereInput\n  AND: [SleepDataSubscriptionWhereInput!]\n  OR: [SleepDataSubscriptionWhereInput!]\n  NOT: [SleepDataSubscriptionWhereInput!]\n}\n\ninput SleepDataUpdateDataInput {\n  sleepLogId: ID\n  dateTime: DateTime\n  level: String\n  second: Int\n}\n\ninput SleepDataUpdateInput {\n  sleepLogId: ID\n  dateTime: DateTime\n  level: String\n  second: Int\n}\n\ninput SleepDataUpdateManyInput {\n  create: [SleepDataCreateInput!]\n  update: [SleepDataUpdateWithWhereUniqueNestedInput!]\n  upsert: [SleepDataUpsertWithWhereUniqueNestedInput!]\n  delete: [SleepDataWhereUniqueInput!]\n  connect: [SleepDataWhereUniqueInput!]\n  disconnect: [SleepDataWhereUniqueInput!]\n}\n\ninput SleepDataUpdateWithWhereUniqueNestedInput {\n  where: SleepDataWhereUniqueInput!\n  data: SleepDataUpdateDataInput!\n}\n\ninput SleepDataUpsertWithWhereUniqueNestedInput {\n  where: SleepDataWhereUniqueInput!\n  update: SleepDataUpdateDataInput!\n  create: SleepDataCreateInput!\n}\n\ninput SleepDataWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  sleepLogId: ID\n  sleepLogId_not: ID\n  sleepLogId_in: [ID!]\n  sleepLogId_not_in: [ID!]\n  sleepLogId_lt: ID\n  sleepLogId_lte: ID\n  sleepLogId_gt: ID\n  sleepLogId_gte: ID\n  sleepLogId_contains: ID\n  sleepLogId_not_contains: ID\n  sleepLogId_starts_with: ID\n  sleepLogId_not_starts_with: ID\n  sleepLogId_ends_with: ID\n  sleepLogId_not_ends_with: ID\n  dateTime: DateTime\n  dateTime_not: DateTime\n  dateTime_in: [DateTime!]\n  dateTime_not_in: [DateTime!]\n  dateTime_lt: DateTime\n  dateTime_lte: DateTime\n  dateTime_gt: DateTime\n  dateTime_gte: DateTime\n  level: String\n  level_not: String\n  level_in: [String!]\n  level_not_in: [String!]\n  level_lt: String\n  level_lte: String\n  level_gt: String\n  level_gte: String\n  level_contains: String\n  level_not_contains: String\n  level_starts_with: String\n  level_not_starts_with: String\n  level_ends_with: String\n  level_not_ends_with: String\n  second: Int\n  second_not: Int\n  second_in: [Int!]\n  second_not_in: [Int!]\n  second_lt: Int\n  second_lte: Int\n  second_gt: Int\n  second_gte: Int\n  AND: [SleepDataWhereInput!]\n  OR: [SleepDataWhereInput!]\n  NOT: [SleepDataWhereInput!]\n}\n\ninput SleepDataWhereUniqueInput {\n  id: ID\n}\n\ntype SleepLog {\n  id: ID!\n  userId: ID!\n  dateOfSleep: String!\n  duration: Int!\n  efficiency: Int!\n  isMainSleep: Boolean!\n  logId: Float!\n  minutesAfterWakeup: Int!\n  minutesAsleep: Int!\n  minutesAwake: Int!\n  minutesToFallAsleep: Int!\n  startTime: DateTime!\n  timeInBed: Int!\n  type: String\n  data(where: SleepDataWhereInput, orderBy: SleepDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SleepData!]\n  summaryDeepCount: Int\n  summaryDeepMinutes: Int\n  summaryDeepThirtyDayAvgMinutes: Int\n  summaryLightCount: Int\n  summaryLightMinutes: Int\n  summaryLightThirtyDayAvgMinutes: Int\n  summaryRemCount: Int\n  summaryRemMinutes: Int\n  summaryRemThirtyDayAvgMinutes: Int\n  summaryWakeCount: Int\n  summaryWakeMinutes: Int\n  summaryWakeThirtyDayAvgMinutes: Int\n  summaryAsleepCount: Int\n  summaryAsleepMinutes: Int\n  summaryAwakeCount: Int\n  summaryAwakeMinutes: Int\n  summaryRestlessCount: Int\n  summaryRestlessMinutes: Int\n}\n\ntype SleepLogConnection {\n  pageInfo: PageInfo!\n  edges: [SleepLogEdge]!\n  aggregate: AggregateSleepLog!\n}\n\ninput SleepLogCreateInput {\n  userId: ID!\n  dateOfSleep: String!\n  duration: Int!\n  efficiency: Int!\n  isMainSleep: Boolean!\n  logId: Float!\n  minutesAfterWakeup: Int!\n  minutesAsleep: Int!\n  minutesAwake: Int!\n  minutesToFallAsleep: Int!\n  startTime: DateTime!\n  timeInBed: Int!\n  type: String\n  data: SleepDataCreateManyInput\n  summaryDeepCount: Int\n  summaryDeepMinutes: Int\n  summaryDeepThirtyDayAvgMinutes: Int\n  summaryLightCount: Int\n  summaryLightMinutes: Int\n  summaryLightThirtyDayAvgMinutes: Int\n  summaryRemCount: Int\n  summaryRemMinutes: Int\n  summaryRemThirtyDayAvgMinutes: Int\n  summaryWakeCount: Int\n  summaryWakeMinutes: Int\n  summaryWakeThirtyDayAvgMinutes: Int\n  summaryAsleepCount: Int\n  summaryAsleepMinutes: Int\n  summaryAwakeCount: Int\n  summaryAwakeMinutes: Int\n  summaryRestlessCount: Int\n  summaryRestlessMinutes: Int\n}\n\ninput SleepLogCreateManyInput {\n  create: [SleepLogCreateInput!]\n  connect: [SleepLogWhereUniqueInput!]\n}\n\ntype SleepLogEdge {\n  node: SleepLog!\n  cursor: String!\n}\n\nenum SleepLogOrderByInput {\n  id_ASC\n  id_DESC\n  userId_ASC\n  userId_DESC\n  dateOfSleep_ASC\n  dateOfSleep_DESC\n  duration_ASC\n  duration_DESC\n  efficiency_ASC\n  efficiency_DESC\n  isMainSleep_ASC\n  isMainSleep_DESC\n  logId_ASC\n  logId_DESC\n  minutesAfterWakeup_ASC\n  minutesAfterWakeup_DESC\n  minutesAsleep_ASC\n  minutesAsleep_DESC\n  minutesAwake_ASC\n  minutesAwake_DESC\n  minutesToFallAsleep_ASC\n  minutesToFallAsleep_DESC\n  startTime_ASC\n  startTime_DESC\n  timeInBed_ASC\n  timeInBed_DESC\n  type_ASC\n  type_DESC\n  summaryDeepCount_ASC\n  summaryDeepCount_DESC\n  summaryDeepMinutes_ASC\n  summaryDeepMinutes_DESC\n  summaryDeepThirtyDayAvgMinutes_ASC\n  summaryDeepThirtyDayAvgMinutes_DESC\n  summaryLightCount_ASC\n  summaryLightCount_DESC\n  summaryLightMinutes_ASC\n  summaryLightMinutes_DESC\n  summaryLightThirtyDayAvgMinutes_ASC\n  summaryLightThirtyDayAvgMinutes_DESC\n  summaryRemCount_ASC\n  summaryRemCount_DESC\n  summaryRemMinutes_ASC\n  summaryRemMinutes_DESC\n  summaryRemThirtyDayAvgMinutes_ASC\n  summaryRemThirtyDayAvgMinutes_DESC\n  summaryWakeCount_ASC\n  summaryWakeCount_DESC\n  summaryWakeMinutes_ASC\n  summaryWakeMinutes_DESC\n  summaryWakeThirtyDayAvgMinutes_ASC\n  summaryWakeThirtyDayAvgMinutes_DESC\n  summaryAsleepCount_ASC\n  summaryAsleepCount_DESC\n  summaryAsleepMinutes_ASC\n  summaryAsleepMinutes_DESC\n  summaryAwakeCount_ASC\n  summaryAwakeCount_DESC\n  summaryAwakeMinutes_ASC\n  summaryAwakeMinutes_DESC\n  summaryRestlessCount_ASC\n  summaryRestlessCount_DESC\n  summaryRestlessMinutes_ASC\n  summaryRestlessMinutes_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype SleepLogPreviousValues {\n  id: ID!\n  userId: ID!\n  dateOfSleep: String!\n  duration: Int!\n  efficiency: Int!\n  isMainSleep: Boolean!\n  logId: Float!\n  minutesAfterWakeup: Int!\n  minutesAsleep: Int!\n  minutesAwake: Int!\n  minutesToFallAsleep: Int!\n  startTime: DateTime!\n  timeInBed: Int!\n  type: String\n  summaryDeepCount: Int\n  summaryDeepMinutes: Int\n  summaryDeepThirtyDayAvgMinutes: Int\n  summaryLightCount: Int\n  summaryLightMinutes: Int\n  summaryLightThirtyDayAvgMinutes: Int\n  summaryRemCount: Int\n  summaryRemMinutes: Int\n  summaryRemThirtyDayAvgMinutes: Int\n  summaryWakeCount: Int\n  summaryWakeMinutes: Int\n  summaryWakeThirtyDayAvgMinutes: Int\n  summaryAsleepCount: Int\n  summaryAsleepMinutes: Int\n  summaryAwakeCount: Int\n  summaryAwakeMinutes: Int\n  summaryRestlessCount: Int\n  summaryRestlessMinutes: Int\n}\n\ntype SleepLogSubscriptionPayload {\n  mutation: MutationType!\n  node: SleepLog\n  updatedFields: [String!]\n  previousValues: SleepLogPreviousValues\n}\n\ninput SleepLogSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: SleepLogWhereInput\n  AND: [SleepLogSubscriptionWhereInput!]\n  OR: [SleepLogSubscriptionWhereInput!]\n  NOT: [SleepLogSubscriptionWhereInput!]\n}\n\ninput SleepLogUpdateDataInput {\n  userId: ID\n  dateOfSleep: String\n  duration: Int\n  efficiency: Int\n  isMainSleep: Boolean\n  logId: Float\n  minutesAfterWakeup: Int\n  minutesAsleep: Int\n  minutesAwake: Int\n  minutesToFallAsleep: Int\n  startTime: DateTime\n  timeInBed: Int\n  type: String\n  data: SleepDataUpdateManyInput\n  summaryDeepCount: Int\n  summaryDeepMinutes: Int\n  summaryDeepThirtyDayAvgMinutes: Int\n  summaryLightCount: Int\n  summaryLightMinutes: Int\n  summaryLightThirtyDayAvgMinutes: Int\n  summaryRemCount: Int\n  summaryRemMinutes: Int\n  summaryRemThirtyDayAvgMinutes: Int\n  summaryWakeCount: Int\n  summaryWakeMinutes: Int\n  summaryWakeThirtyDayAvgMinutes: Int\n  summaryAsleepCount: Int\n  summaryAsleepMinutes: Int\n  summaryAwakeCount: Int\n  summaryAwakeMinutes: Int\n  summaryRestlessCount: Int\n  summaryRestlessMinutes: Int\n}\n\ninput SleepLogUpdateInput {\n  userId: ID\n  dateOfSleep: String\n  duration: Int\n  efficiency: Int\n  isMainSleep: Boolean\n  logId: Float\n  minutesAfterWakeup: Int\n  minutesAsleep: Int\n  minutesAwake: Int\n  minutesToFallAsleep: Int\n  startTime: DateTime\n  timeInBed: Int\n  type: String\n  data: SleepDataUpdateManyInput\n  summaryDeepCount: Int\n  summaryDeepMinutes: Int\n  summaryDeepThirtyDayAvgMinutes: Int\n  summaryLightCount: Int\n  summaryLightMinutes: Int\n  summaryLightThirtyDayAvgMinutes: Int\n  summaryRemCount: Int\n  summaryRemMinutes: Int\n  summaryRemThirtyDayAvgMinutes: Int\n  summaryWakeCount: Int\n  summaryWakeMinutes: Int\n  summaryWakeThirtyDayAvgMinutes: Int\n  summaryAsleepCount: Int\n  summaryAsleepMinutes: Int\n  summaryAwakeCount: Int\n  summaryAwakeMinutes: Int\n  summaryRestlessCount: Int\n  summaryRestlessMinutes: Int\n}\n\ninput SleepLogUpdateManyInput {\n  create: [SleepLogCreateInput!]\n  update: [SleepLogUpdateWithWhereUniqueNestedInput!]\n  upsert: [SleepLogUpsertWithWhereUniqueNestedInput!]\n  delete: [SleepLogWhereUniqueInput!]\n  connect: [SleepLogWhereUniqueInput!]\n  disconnect: [SleepLogWhereUniqueInput!]\n}\n\ninput SleepLogUpdateWithWhereUniqueNestedInput {\n  where: SleepLogWhereUniqueInput!\n  data: SleepLogUpdateDataInput!\n}\n\ninput SleepLogUpsertWithWhereUniqueNestedInput {\n  where: SleepLogWhereUniqueInput!\n  update: SleepLogUpdateDataInput!\n  create: SleepLogCreateInput!\n}\n\ninput SleepLogWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  userId: ID\n  userId_not: ID\n  userId_in: [ID!]\n  userId_not_in: [ID!]\n  userId_lt: ID\n  userId_lte: ID\n  userId_gt: ID\n  userId_gte: ID\n  userId_contains: ID\n  userId_not_contains: ID\n  userId_starts_with: ID\n  userId_not_starts_with: ID\n  userId_ends_with: ID\n  userId_not_ends_with: ID\n  dateOfSleep: String\n  dateOfSleep_not: String\n  dateOfSleep_in: [String!]\n  dateOfSleep_not_in: [String!]\n  dateOfSleep_lt: String\n  dateOfSleep_lte: String\n  dateOfSleep_gt: String\n  dateOfSleep_gte: String\n  dateOfSleep_contains: String\n  dateOfSleep_not_contains: String\n  dateOfSleep_starts_with: String\n  dateOfSleep_not_starts_with: String\n  dateOfSleep_ends_with: String\n  dateOfSleep_not_ends_with: String\n  duration: Int\n  duration_not: Int\n  duration_in: [Int!]\n  duration_not_in: [Int!]\n  duration_lt: Int\n  duration_lte: Int\n  duration_gt: Int\n  duration_gte: Int\n  efficiency: Int\n  efficiency_not: Int\n  efficiency_in: [Int!]\n  efficiency_not_in: [Int!]\n  efficiency_lt: Int\n  efficiency_lte: Int\n  efficiency_gt: Int\n  efficiency_gte: Int\n  isMainSleep: Boolean\n  isMainSleep_not: Boolean\n  logId: Float\n  logId_not: Float\n  logId_in: [Float!]\n  logId_not_in: [Float!]\n  logId_lt: Float\n  logId_lte: Float\n  logId_gt: Float\n  logId_gte: Float\n  minutesAfterWakeup: Int\n  minutesAfterWakeup_not: Int\n  minutesAfterWakeup_in: [Int!]\n  minutesAfterWakeup_not_in: [Int!]\n  minutesAfterWakeup_lt: Int\n  minutesAfterWakeup_lte: Int\n  minutesAfterWakeup_gt: Int\n  minutesAfterWakeup_gte: Int\n  minutesAsleep: Int\n  minutesAsleep_not: Int\n  minutesAsleep_in: [Int!]\n  minutesAsleep_not_in: [Int!]\n  minutesAsleep_lt: Int\n  minutesAsleep_lte: Int\n  minutesAsleep_gt: Int\n  minutesAsleep_gte: Int\n  minutesAwake: Int\n  minutesAwake_not: Int\n  minutesAwake_in: [Int!]\n  minutesAwake_not_in: [Int!]\n  minutesAwake_lt: Int\n  minutesAwake_lte: Int\n  minutesAwake_gt: Int\n  minutesAwake_gte: Int\n  minutesToFallAsleep: Int\n  minutesToFallAsleep_not: Int\n  minutesToFallAsleep_in: [Int!]\n  minutesToFallAsleep_not_in: [Int!]\n  minutesToFallAsleep_lt: Int\n  minutesToFallAsleep_lte: Int\n  minutesToFallAsleep_gt: Int\n  minutesToFallAsleep_gte: Int\n  startTime: DateTime\n  startTime_not: DateTime\n  startTime_in: [DateTime!]\n  startTime_not_in: [DateTime!]\n  startTime_lt: DateTime\n  startTime_lte: DateTime\n  startTime_gt: DateTime\n  startTime_gte: DateTime\n  timeInBed: Int\n  timeInBed_not: Int\n  timeInBed_in: [Int!]\n  timeInBed_not_in: [Int!]\n  timeInBed_lt: Int\n  timeInBed_lte: Int\n  timeInBed_gt: Int\n  timeInBed_gte: Int\n  type: String\n  type_not: String\n  type_in: [String!]\n  type_not_in: [String!]\n  type_lt: String\n  type_lte: String\n  type_gt: String\n  type_gte: String\n  type_contains: String\n  type_not_contains: String\n  type_starts_with: String\n  type_not_starts_with: String\n  type_ends_with: String\n  type_not_ends_with: String\n  data_every: SleepDataWhereInput\n  data_some: SleepDataWhereInput\n  data_none: SleepDataWhereInput\n  summaryDeepCount: Int\n  summaryDeepCount_not: Int\n  summaryDeepCount_in: [Int!]\n  summaryDeepCount_not_in: [Int!]\n  summaryDeepCount_lt: Int\n  summaryDeepCount_lte: Int\n  summaryDeepCount_gt: Int\n  summaryDeepCount_gte: Int\n  summaryDeepMinutes: Int\n  summaryDeepMinutes_not: Int\n  summaryDeepMinutes_in: [Int!]\n  summaryDeepMinutes_not_in: [Int!]\n  summaryDeepMinutes_lt: Int\n  summaryDeepMinutes_lte: Int\n  summaryDeepMinutes_gt: Int\n  summaryDeepMinutes_gte: Int\n  summaryDeepThirtyDayAvgMinutes: Int\n  summaryDeepThirtyDayAvgMinutes_not: Int\n  summaryDeepThirtyDayAvgMinutes_in: [Int!]\n  summaryDeepThirtyDayAvgMinutes_not_in: [Int!]\n  summaryDeepThirtyDayAvgMinutes_lt: Int\n  summaryDeepThirtyDayAvgMinutes_lte: Int\n  summaryDeepThirtyDayAvgMinutes_gt: Int\n  summaryDeepThirtyDayAvgMinutes_gte: Int\n  summaryLightCount: Int\n  summaryLightCount_not: Int\n  summaryLightCount_in: [Int!]\n  summaryLightCount_not_in: [Int!]\n  summaryLightCount_lt: Int\n  summaryLightCount_lte: Int\n  summaryLightCount_gt: Int\n  summaryLightCount_gte: Int\n  summaryLightMinutes: Int\n  summaryLightMinutes_not: Int\n  summaryLightMinutes_in: [Int!]\n  summaryLightMinutes_not_in: [Int!]\n  summaryLightMinutes_lt: Int\n  summaryLightMinutes_lte: Int\n  summaryLightMinutes_gt: Int\n  summaryLightMinutes_gte: Int\n  summaryLightThirtyDayAvgMinutes: Int\n  summaryLightThirtyDayAvgMinutes_not: Int\n  summaryLightThirtyDayAvgMinutes_in: [Int!]\n  summaryLightThirtyDayAvgMinutes_not_in: [Int!]\n  summaryLightThirtyDayAvgMinutes_lt: Int\n  summaryLightThirtyDayAvgMinutes_lte: Int\n  summaryLightThirtyDayAvgMinutes_gt: Int\n  summaryLightThirtyDayAvgMinutes_gte: Int\n  summaryRemCount: Int\n  summaryRemCount_not: Int\n  summaryRemCount_in: [Int!]\n  summaryRemCount_not_in: [Int!]\n  summaryRemCount_lt: Int\n  summaryRemCount_lte: Int\n  summaryRemCount_gt: Int\n  summaryRemCount_gte: Int\n  summaryRemMinutes: Int\n  summaryRemMinutes_not: Int\n  summaryRemMinutes_in: [Int!]\n  summaryRemMinutes_not_in: [Int!]\n  summaryRemMinutes_lt: Int\n  summaryRemMinutes_lte: Int\n  summaryRemMinutes_gt: Int\n  summaryRemMinutes_gte: Int\n  summaryRemThirtyDayAvgMinutes: Int\n  summaryRemThirtyDayAvgMinutes_not: Int\n  summaryRemThirtyDayAvgMinutes_in: [Int!]\n  summaryRemThirtyDayAvgMinutes_not_in: [Int!]\n  summaryRemThirtyDayAvgMinutes_lt: Int\n  summaryRemThirtyDayAvgMinutes_lte: Int\n  summaryRemThirtyDayAvgMinutes_gt: Int\n  summaryRemThirtyDayAvgMinutes_gte: Int\n  summaryWakeCount: Int\n  summaryWakeCount_not: Int\n  summaryWakeCount_in: [Int!]\n  summaryWakeCount_not_in: [Int!]\n  summaryWakeCount_lt: Int\n  summaryWakeCount_lte: Int\n  summaryWakeCount_gt: Int\n  summaryWakeCount_gte: Int\n  summaryWakeMinutes: Int\n  summaryWakeMinutes_not: Int\n  summaryWakeMinutes_in: [Int!]\n  summaryWakeMinutes_not_in: [Int!]\n  summaryWakeMinutes_lt: Int\n  summaryWakeMinutes_lte: Int\n  summaryWakeMinutes_gt: Int\n  summaryWakeMinutes_gte: Int\n  summaryWakeThirtyDayAvgMinutes: Int\n  summaryWakeThirtyDayAvgMinutes_not: Int\n  summaryWakeThirtyDayAvgMinutes_in: [Int!]\n  summaryWakeThirtyDayAvgMinutes_not_in: [Int!]\n  summaryWakeThirtyDayAvgMinutes_lt: Int\n  summaryWakeThirtyDayAvgMinutes_lte: Int\n  summaryWakeThirtyDayAvgMinutes_gt: Int\n  summaryWakeThirtyDayAvgMinutes_gte: Int\n  summaryAsleepCount: Int\n  summaryAsleepCount_not: Int\n  summaryAsleepCount_in: [Int!]\n  summaryAsleepCount_not_in: [Int!]\n  summaryAsleepCount_lt: Int\n  summaryAsleepCount_lte: Int\n  summaryAsleepCount_gt: Int\n  summaryAsleepCount_gte: Int\n  summaryAsleepMinutes: Int\n  summaryAsleepMinutes_not: Int\n  summaryAsleepMinutes_in: [Int!]\n  summaryAsleepMinutes_not_in: [Int!]\n  summaryAsleepMinutes_lt: Int\n  summaryAsleepMinutes_lte: Int\n  summaryAsleepMinutes_gt: Int\n  summaryAsleepMinutes_gte: Int\n  summaryAwakeCount: Int\n  summaryAwakeCount_not: Int\n  summaryAwakeCount_in: [Int!]\n  summaryAwakeCount_not_in: [Int!]\n  summaryAwakeCount_lt: Int\n  summaryAwakeCount_lte: Int\n  summaryAwakeCount_gt: Int\n  summaryAwakeCount_gte: Int\n  summaryAwakeMinutes: Int\n  summaryAwakeMinutes_not: Int\n  summaryAwakeMinutes_in: [Int!]\n  summaryAwakeMinutes_not_in: [Int!]\n  summaryAwakeMinutes_lt: Int\n  summaryAwakeMinutes_lte: Int\n  summaryAwakeMinutes_gt: Int\n  summaryAwakeMinutes_gte: Int\n  summaryRestlessCount: Int\n  summaryRestlessCount_not: Int\n  summaryRestlessCount_in: [Int!]\n  summaryRestlessCount_not_in: [Int!]\n  summaryRestlessCount_lt: Int\n  summaryRestlessCount_lte: Int\n  summaryRestlessCount_gt: Int\n  summaryRestlessCount_gte: Int\n  summaryRestlessMinutes: Int\n  summaryRestlessMinutes_not: Int\n  summaryRestlessMinutes_in: [Int!]\n  summaryRestlessMinutes_not_in: [Int!]\n  summaryRestlessMinutes_lt: Int\n  summaryRestlessMinutes_lte: Int\n  summaryRestlessMinutes_gt: Int\n  summaryRestlessMinutes_gte: Int\n  AND: [SleepLogWhereInput!]\n  OR: [SleepLogWhereInput!]\n  NOT: [SleepLogWhereInput!]\n}\n\ninput SleepLogWhereUniqueInput {\n  id: ID\n  logId: Float\n}\n\ntype StepData {\n  id: ID!\n  stepLogId: ID!\n  dateTime: DateTime!\n  steps: Int!\n}\n\ntype StepDataConnection {\n  pageInfo: PageInfo!\n  edges: [StepDataEdge]!\n  aggregate: AggregateStepData!\n}\n\ninput StepDataCreateInput {\n  stepLogId: ID!\n  dateTime: DateTime!\n  steps: Int!\n}\n\ninput StepDataCreateManyInput {\n  create: [StepDataCreateInput!]\n  connect: [StepDataWhereUniqueInput!]\n}\n\ntype StepDataEdge {\n  node: StepData!\n  cursor: String!\n}\n\nenum StepDataOrderByInput {\n  id_ASC\n  id_DESC\n  stepLogId_ASC\n  stepLogId_DESC\n  dateTime_ASC\n  dateTime_DESC\n  steps_ASC\n  steps_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype StepDataPreviousValues {\n  id: ID!\n  stepLogId: ID!\n  dateTime: DateTime!\n  steps: Int!\n}\n\ntype StepDataSubscriptionPayload {\n  mutation: MutationType!\n  node: StepData\n  updatedFields: [String!]\n  previousValues: StepDataPreviousValues\n}\n\ninput StepDataSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: StepDataWhereInput\n  AND: [StepDataSubscriptionWhereInput!]\n  OR: [StepDataSubscriptionWhereInput!]\n  NOT: [StepDataSubscriptionWhereInput!]\n}\n\ninput StepDataUpdateDataInput {\n  stepLogId: ID\n  dateTime: DateTime\n  steps: Int\n}\n\ninput StepDataUpdateInput {\n  stepLogId: ID\n  dateTime: DateTime\n  steps: Int\n}\n\ninput StepDataUpdateManyInput {\n  create: [StepDataCreateInput!]\n  update: [StepDataUpdateWithWhereUniqueNestedInput!]\n  upsert: [StepDataUpsertWithWhereUniqueNestedInput!]\n  delete: [StepDataWhereUniqueInput!]\n  connect: [StepDataWhereUniqueInput!]\n  disconnect: [StepDataWhereUniqueInput!]\n}\n\ninput StepDataUpdateWithWhereUniqueNestedInput {\n  where: StepDataWhereUniqueInput!\n  data: StepDataUpdateDataInput!\n}\n\ninput StepDataUpsertWithWhereUniqueNestedInput {\n  where: StepDataWhereUniqueInput!\n  update: StepDataUpdateDataInput!\n  create: StepDataCreateInput!\n}\n\ninput StepDataWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  stepLogId: ID\n  stepLogId_not: ID\n  stepLogId_in: [ID!]\n  stepLogId_not_in: [ID!]\n  stepLogId_lt: ID\n  stepLogId_lte: ID\n  stepLogId_gt: ID\n  stepLogId_gte: ID\n  stepLogId_contains: ID\n  stepLogId_not_contains: ID\n  stepLogId_starts_with: ID\n  stepLogId_not_starts_with: ID\n  stepLogId_ends_with: ID\n  stepLogId_not_ends_with: ID\n  dateTime: DateTime\n  dateTime_not: DateTime\n  dateTime_in: [DateTime!]\n  dateTime_not_in: [DateTime!]\n  dateTime_lt: DateTime\n  dateTime_lte: DateTime\n  dateTime_gt: DateTime\n  dateTime_gte: DateTime\n  steps: Int\n  steps_not: Int\n  steps_in: [Int!]\n  steps_not_in: [Int!]\n  steps_lt: Int\n  steps_lte: Int\n  steps_gt: Int\n  steps_gte: Int\n  AND: [StepDataWhereInput!]\n  OR: [StepDataWhereInput!]\n  NOT: [StepDataWhereInput!]\n}\n\ninput StepDataWhereUniqueInput {\n  id: ID\n}\n\ntype StepLog {\n  id: ID!\n  date: DateTime!\n  totalSteps: Int!\n  intradayData(where: StepDataWhereInput, orderBy: StepDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [StepData!]\n}\n\ntype StepLogConnection {\n  pageInfo: PageInfo!\n  edges: [StepLogEdge]!\n  aggregate: AggregateStepLog!\n}\n\ninput StepLogCreateInput {\n  date: DateTime!\n  totalSteps: Int!\n  intradayData: StepDataCreateManyInput\n}\n\ntype StepLogEdge {\n  node: StepLog!\n  cursor: String!\n}\n\nenum StepLogOrderByInput {\n  id_ASC\n  id_DESC\n  date_ASC\n  date_DESC\n  totalSteps_ASC\n  totalSteps_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype StepLogPreviousValues {\n  id: ID!\n  date: DateTime!\n  totalSteps: Int!\n}\n\ntype StepLogSubscriptionPayload {\n  mutation: MutationType!\n  node: StepLog\n  updatedFields: [String!]\n  previousValues: StepLogPreviousValues\n}\n\ninput StepLogSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: StepLogWhereInput\n  AND: [StepLogSubscriptionWhereInput!]\n  OR: [StepLogSubscriptionWhereInput!]\n  NOT: [StepLogSubscriptionWhereInput!]\n}\n\ninput StepLogUpdateInput {\n  date: DateTime\n  totalSteps: Int\n  intradayData: StepDataUpdateManyInput\n}\n\ninput StepLogWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  date: DateTime\n  date_not: DateTime\n  date_in: [DateTime!]\n  date_not_in: [DateTime!]\n  date_lt: DateTime\n  date_lte: DateTime\n  date_gt: DateTime\n  date_gte: DateTime\n  totalSteps: Int\n  totalSteps_not: Int\n  totalSteps_in: [Int!]\n  totalSteps_not_in: [Int!]\n  totalSteps_lt: Int\n  totalSteps_lte: Int\n  totalSteps_gt: Int\n  totalSteps_gte: Int\n  intradayData_every: StepDataWhereInput\n  intradayData_some: StepDataWhereInput\n  intradayData_none: StepDataWhereInput\n  AND: [StepLogWhereInput!]\n  OR: [StepLogWhereInput!]\n  NOT: [StepLogWhereInput!]\n}\n\ninput StepLogWhereUniqueInput {\n  id: ID\n}\n\ntype Subscription {\n  calorieData(where: CalorieDataSubscriptionWhereInput): CalorieDataSubscriptionPayload\n  calorieLog(where: CalorieLogSubscriptionWhereInput): CalorieLogSubscriptionPayload\n  distanceData(where: DistanceDataSubscriptionWhereInput): DistanceDataSubscriptionPayload\n  distanceLog(where: DistanceLogSubscriptionWhereInput): DistanceLogSubscriptionPayload\n  fitbitAccount(where: FitbitAccountSubscriptionWhereInput): FitbitAccountSubscriptionPayload\n  googleFitAccount(where: GoogleFitAccountSubscriptionWhereInput): GoogleFitAccountSubscriptionPayload\n  heartData(where: HeartDataSubscriptionWhereInput): HeartDataSubscriptionPayload\n  heartLog(where: HeartLogSubscriptionWhereInput): HeartLogSubscriptionPayload\n  sleepData(where: SleepDataSubscriptionWhereInput): SleepDataSubscriptionPayload\n  sleepLog(where: SleepLogSubscriptionWhereInput): SleepLogSubscriptionPayload\n  stepData(where: StepDataSubscriptionWhereInput): StepDataSubscriptionPayload\n  stepLog(where: StepLogSubscriptionWhereInput): StepLogSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype User {\n  id: ID!\n  email: String!\n  password: String!\n  googleFitAccount: GoogleFitAccount\n  fitbitAccount: FitbitAccount\n  sleepLogs(where: SleepLogWhereInput, orderBy: SleepLogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SleepLog!]\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype UserConnection {\n  pageInfo: PageInfo!\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  email: String!\n  password: String!\n  googleFitAccount: GoogleFitAccountCreateOneInput\n  fitbitAccount: FitbitAccountCreateOneInput\n  sleepLogs: SleepLogCreateManyInput\n}\n\ntype UserEdge {\n  node: User!\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  email_ASC\n  email_DESC\n  password_ASC\n  password_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  email: String!\n  password: String!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n  AND: [UserSubscriptionWhereInput!]\n  OR: [UserSubscriptionWhereInput!]\n  NOT: [UserSubscriptionWhereInput!]\n}\n\ninput UserUpdateInput {\n  email: String\n  password: String\n  googleFitAccount: GoogleFitAccountUpdateOneInput\n  fitbitAccount: FitbitAccountUpdateOneInput\n  sleepLogs: SleepLogUpdateManyInput\n}\n\ninput UserWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  email: String\n  email_not: String\n  email_in: [String!]\n  email_not_in: [String!]\n  email_lt: String\n  email_lte: String\n  email_gt: String\n  email_gte: String\n  email_contains: String\n  email_not_contains: String\n  email_starts_with: String\n  email_not_starts_with: String\n  email_ends_with: String\n  email_not_ends_with: String\n  password: String\n  password_not: String\n  password_in: [String!]\n  password_not_in: [String!]\n  password_lt: String\n  password_lte: String\n  password_gt: String\n  password_gte: String\n  password_contains: String\n  password_not_contains: String\n  password_starts_with: String\n  password_not_starts_with: String\n  password_ends_with: String\n  password_not_ends_with: String\n  googleFitAccount: GoogleFitAccountWhereInput\n  fitbitAccount: FitbitAccountWhereInput\n  sleepLogs_every: SleepLogWhereInput\n  sleepLogs_some: SleepLogWhereInput\n  sleepLogs_none: SleepLogWhereInput\n  createdAt: DateTime\n  createdAt_not: DateTime\n  createdAt_in: [DateTime!]\n  createdAt_not_in: [DateTime!]\n  createdAt_lt: DateTime\n  createdAt_lte: DateTime\n  createdAt_gt: DateTime\n  createdAt_gte: DateTime\n  updatedAt: DateTime\n  updatedAt_not: DateTime\n  updatedAt_in: [DateTime!]\n  updatedAt_not_in: [DateTime!]\n  updatedAt_lt: DateTime\n  updatedAt_lte: DateTime\n  updatedAt_gt: DateTime\n  updatedAt_gte: DateTime\n  AND: [UserWhereInput!]\n  OR: [UserWhereInput!]\n  NOT: [UserWhereInput!]\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n}\n";
//# sourceMappingURL=prisma-schema.js.map